version: '3.8'

services:
  # PostgreSQL Database (same as production)
  database:
    image: postgres:15-alpine
    container_name: ai-news-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ai_news_db
      POSTGRES_USER: ai_news_user
      POSTGRES_PASSWORD: ai_news_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_news_user -d ai_news_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: ai-news-backend-dev
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://ai_news_user:ai_news_password@database:5432/ai_news_db
      
      # Server
      PORT: 3001
      NODE_ENV: development
      
      # JWT
      JWT_SECRET: dev_jwt_secret_not_for_production
      JWT_EXPIRES_IN: 7d
      
      # OpenAI (Add your API key)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      
      # Rate Limiting
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 1000
      
      # CORS
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads_dev:/app/uploads

  # Frontend Next.js Application (Development)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: ai-news-frontend-dev
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-news-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  backend_uploads_dev:
    driver: local

networks:
  default:
    name: ai-news-network-dev